{
  "name": "ghq-project-manager",
  "displayName": "ghq project manager",
  "description": "ghq-project-manager for vscode",
  "version": "0.0.0",
  "publisher": "hadenlabs",
  "icon": "assets/images/icon.png",
  "author": "Luis Mayta <slovacus@gmail.com>",
  "license": "LGPL-3.0",
  "engines": {
    "node": ">=14",
    "vscode": "^1.54.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:ghqProjectManager.openProject"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Ghq Project Manager configuration",
      "properties": {
        "ghqProjectManager.baseProjectsFolders": {
          "type": "array",
          "default": [],
          "description": "Specifies the base folders to search for repositories"
        },
        "ghqProjectManager.codePath": {
          "type": [
            "string",
            "array",
            "object"
          ],
          "default": "code",
          "description": "Specifies full path to Code command to use when opening a project."
        },
        "ghqProjectManager.warnIfFolderNotFound": {
          "type": "boolean",
          "default": false,
          "description": "Define if extension should show a warn if a configured project folder is not found while searching for projects"
        },
        "ghqProjectManager.displayProjectPath": {
          "type": "boolean",
          "default": false,
          "description": "Indicates if project path will be displayed in project picker."
        }
      }
    },
    "commands": [
      {
        "command": "ghqProjectManager.openProject",
        "title": "Open Ghq Project",
        "category": "GPM"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+alt+p",
        "mac": "cmd+alt+p",
        "command": "ghqProjectManager.openProject"
      }
    ]
  },
  "scripts": {
    "build": "tsc -p ./",
    "clean": "rimraf -rf dist",
    "clean:all": "yarn clean:cache && yarn clean:build:all && yarn clean node_modules",
    "clean:build": "yarn clean dist .next out .serverless_nextjs",
    "clean:build:all": "yarn clean && yarn clean:build && yarn clean:build:test",
    "clean:build:test": "yarn clean ./coverage",
    "clean:cache": "yarn clean ./node_modules/.cache",
    "lint": "eslint --config=.github/linters/.eslintrc.js --ignore-path=.github/linters/.eslintignore ./ --ext .js,.jsx,.mjs,.d.ts,.ts,.tsx",
    "lint:fix": "yarn lint --fix",
    "lint:less": "stylelint --config=.github/linters/.stylintrc --syntax less **/*.less",
    "lint:less:fix": "yarn lint:less --fix",
    "ncu": "ncu -u --target minor",
    "ncu:patch": "ncu -u --target patch",
    "package:vsix": "vsce package -o build/publish/$npm_package_name-$npm_package_version.vsix",
		"package:vsix:windows": "vsce package -o build/publish/%npm_package_name%-%npm_package_version%.vsix",
    "prebuild": "mkdirp build && yarn run clean:build:all",
    "precommit": "lint-staged",
		"prepackage:vsix": "mkdirp build/publish",
		"prepackage:vsix:windows": "mkdirp build/publish",
    "pretest": "yarn run build && yarn run lint:fix",
    "prettier": "prettier --config=.github/linters/prettier.config.js --ignore-path=.github/linters/.prettierignore",
    "prettier:fix": "yarn prettier:lint --write=true",
    "prettier:lint": "yarn prettier '**/*.{js?(on),ts?(x),scss,md,y?(a)ml,gql,graphql?(s),less,mjml}' --write=false --list-different",
		"publish:ext": "vsce publish patch",
		"publish:vsix": "vsce publish --packagePath build/publish/$npm_package_name-$npm_package_version.vsix",
		"publish:vsix:windows": "vsce publish --packagePath build/publish/%npm_package_name%-%npm_package_version%.vsix",
    "test": "node ./out/test/runTest.js",
		"vsce": "vsce",
		"vsce:login": "vsce login hadenlabs",
    "vscode:prepublish": "yarn run build",
    "watch": "tsc -watch -p ./"
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "husky": {
    "hooks": {
      "pre-commit": "yarn precommit",
      "commit-msg": "commitlint --config=.github/linters/.commitlintrc.json -E HUSKY_GIT_PARAMS"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hadenlabs/ghq-project-manager"
  },
  "keywords": [
    "ghq",
    "git",
    "commits",
    "hadenlabs"
  ],
  "bugs": {
    "url": "https://github.com/hadenlabs/ghq-project-manager/issues"
  },
  "homepage": "https://github.com/hadenlabs/ghq-project-manager#readme",
  "dependencies": {
    "shelljs": "^0.8.4",
    "strip-ansi": "^7.0.0"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.13.14",
    "@commitlint/cli": "^12.1.1",
    "@hadenlabs/commitlint-config": "^0.1.0",
    "@types/chai": "^4.2.17",
    "@types/crypto-js": "^4.0.1",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "^14.14.42",
    "@types/rimraf": "^3.0.0",
    "@types/shelljs": "^0.8.8",
    "@types/sinon": "^10.0.0",
    "@types/util.promisify": "^1.0.4",
    "@types/vscode": "^1.54.0",
    "@typescript-eslint/eslint-plugin": "^4.22.0",
    "@typescript-eslint/parser": "^4.22.0",
    "babel-cli": "^6.26.0",
    "chai": "^4.3.4",
    "crypto-js": "^4.0.0",
    "eslint": "^7.25.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-promise": "^5.1.0",
    "glob": "^7.1.6",
    "husky": "^6.0.0",
    "lint-staged": "^10.5.4",
    "mocha": "^8.3.2",
    "prettier": "^2.2.1",
    "prettier-eslint": "^12.0.0",
    "rimraf": "^3.0.2",
    "sinon": "^10.0.1",
    "stylelint": "^13.13.0",
    "stylelint-config-standard": "^21.0.0",
    "ts-node": "^9.1.1",
    "typescript": "^4.2.4",
    "vsce": "^1.87.1",
    "vscode-test": "^1.5.2"
  },
  "prettier": "./.github/linters/prettier.config.js",
  "stylintrc": ".github/linters/.stylintrc"
}
